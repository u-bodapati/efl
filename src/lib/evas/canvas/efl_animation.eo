import efl_animation_types;

abstract Efl.Animation (Efl.Object)
{
   [[Efl animation abstract class]]
   legacy_prefix: evas_object_animation;
   data: Evas_Object_Animation_Data;
   methods {
      @property target {
         set {
         }
         get {
         }
         values {
            target: Efl.Canvas.Object; [[Target object which is applied animation]]
         }
      }
      @property final_state_keep {
         set {
         }
         get {
         }
         values {
            state_keep: bool; [[$true to keep final state, $false otherwise]]
         }
      }
      @property duration {
         set {
         }
         get {
         }
         values {
            duration: double; [[Duration value]]
         }
      }
      is_deleted @protected /* @internal */ {
         [[Check if animation is deleted.]]
         return: bool; [[$true if deleted, $false otherwise]]
      }
      start {
         [[Start animation.]]
         return: bool; [[$true on success, $false otherwise]]
      }
      cancel {
         [[Cancel animation.]]
         return: bool; [[$true on success, $false otherwise]]
      }
      state_get {
         [[Get the state of animation]]
         return: Efl.Animation.State; [[Animation state]]
      }
   }
   implements {
      Efl.Object.constructor;
      Efl.Object.destructor;
   }
   events {
      animate; [[Animation is animated.]]
      end; [[Animation ended]]
   }
}
